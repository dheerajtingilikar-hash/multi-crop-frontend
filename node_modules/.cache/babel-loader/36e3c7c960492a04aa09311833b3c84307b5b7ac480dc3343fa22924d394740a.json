{"ast":null,"code":"var _jsxFileName = \"D:\\\\multi-crop-recognition\\\\frontend\\\\src\\\\components\\\\History.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction History() {\n  _s();\n  const [history, setHistory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchHistory() {\n      try {\n        const response = await fetch(\"http://127.0.0.1:8000/history\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch history\");\n        }\n        const data = await response.json();\n        setHistory(data);\n      } catch (error) {\n        console.error(\"Error fetching history:\", error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchHistory();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading history...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"history\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Prediction History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), history.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No past predictions found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"10\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Plant Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Probability\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Common Names\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Timestamp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: history.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.plant_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [(item.probability * 100).toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.common_names || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(item.timestamp).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(History, \"Ieukcr00HhsUBPlfQ8IG0OBl+dQ=\");\n_c = History;\nexport default History;\nvar _c;\n$RefreshReg$(_c, \"History\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","History","_s","history","setHistory","loading","setLoading","fetchHistory","response","fetch","ok","Error","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","border","cellPadding","map","item","plant_name","probability","toFixed","common_names","Date","timestamp","toLocaleString","id","_c","$RefreshReg$"],"sources":["D:/multi-crop-recognition/frontend/src/components/History.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction History() {\r\n  const [history, setHistory] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchHistory() {\r\n      try {\r\n        const response = await fetch(\"http://127.0.0.1:8000/history\");\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch history\");\r\n        }\r\n        const data = await response.json();\r\n        setHistory(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching history:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchHistory();\r\n  }, []);\r\n\r\n  if (loading) return <p>Loading history...</p>;\r\n\r\n  return (\r\n    <div className=\"history\">\r\n      <h2>Prediction History</h2>\r\n      {history.length === 0 ? (\r\n        <p>No past predictions found.</p>\r\n      ) : (\r\n        <table border=\"1\" cellPadding=\"10\">\r\n          <thead>\r\n            <tr>\r\n              <th>Plant Name</th>\r\n              <th>Probability</th>\r\n              <th>Common Names</th>\r\n              <th>Timestamp</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {history.map((item) => (\r\n              <tr key={item.id}>\r\n                <td>{item.plant_name}</td>\r\n                <td>{(item.probability * 100).toFixed(2)}%</td>\r\n                <td>{item.common_names || \"N/A\"}</td>\r\n                <td>{new Date(item.timestamp).toLocaleString()}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default History;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,eAAeU,YAAYA,CAAA,EAAG;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;QAC7D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;QAC5C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCT,UAAU,CAACQ,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,SAAS;QACRR,UAAU,CAAC,KAAK,CAAC;MACnB;IACF;IAEAC,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE,oBAAOL,OAAA;IAAAgB,QAAA,EAAG;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE7C,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,SAAS;IAAAL,QAAA,gBACtBhB,OAAA;MAAAgB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1BjB,OAAO,CAACmB,MAAM,KAAK,CAAC,gBACnBtB,OAAA;MAAAgB,QAAA,EAAG;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjCpB,OAAA;MAAOuB,MAAM,EAAC,GAAG;MAACC,WAAW,EAAC,IAAI;MAAAR,QAAA,gBAChChB,OAAA;QAAAgB,QAAA,eACEhB,OAAA;UAAAgB,QAAA,gBACEhB,OAAA;YAAAgB,QAAA,EAAI;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnBpB,OAAA;YAAAgB,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBpB,OAAA;YAAAgB,QAAA,EAAI;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrBpB,OAAA;YAAAgB,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRpB,OAAA;QAAAgB,QAAA,EACGb,OAAO,CAACsB,GAAG,CAAEC,IAAI,iBAChB1B,OAAA;UAAAgB,QAAA,gBACEhB,OAAA;YAAAgB,QAAA,EAAKU,IAAI,CAACC;UAAU;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1BpB,OAAA;YAAAgB,QAAA,GAAK,CAACU,IAAI,CAACE,WAAW,GAAG,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/CpB,OAAA;YAAAgB,QAAA,EAAKU,IAAI,CAACI,YAAY,IAAI;UAAK;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrCpB,OAAA;YAAAgB,QAAA,EAAK,IAAIe,IAAI,CAACL,IAAI,CAACM,SAAS,CAAC,CAACC,cAAc,CAAC;UAAC;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAJ7CM,IAAI,CAACQ,EAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClB,EAAA,CAtDQD,OAAO;AAAAkC,EAAA,GAAPlC,OAAO;AAwDhB,eAAeA,OAAO;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}